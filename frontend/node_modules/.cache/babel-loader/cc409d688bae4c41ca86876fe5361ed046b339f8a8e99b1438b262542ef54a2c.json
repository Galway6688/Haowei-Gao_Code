{"ast":null,"code":"var _jsxFileName = \"E:\\\\python project\\\\Real new\\\\frontend\\\\src\\\\components\\\\PromptTemplates.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode, faList, faPlus, faSave, faInfoCircle, faSync, faDownload } from '@fortawesome/free-solid-svg-icons';\nimport { multimodalAPI } from '../services/api';\nimport InputField from './common/InputField';\nimport Button from './common/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n  \n  h2 {\n    font-size: 2rem;\n    color: #2c3e50;\n    margin-bottom: 10px;\n    \n    .icon {\n      color: #9b59b6;\n      margin-right: 10px;\n    }\n  }\n  \n  p {\n    color: #7f8c8d;\n    font-size: 1.1rem;\n  }\n`;\n_c2 = SectionHeader;\nconst SectionGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 30px;\n  margin-bottom: 30px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = SectionGrid;\nconst Section = styled.div`\n  padding: 25px;\n  background: #f8f9fa;\n  border-radius: 10px;\n  \n  h3 {\n    color: #2c3e50;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    \n    .icon {\n      color: #9b59b6;\n    }\n  }\n`;\n_c4 = Section;\nconst TemplatesList = styled.div`\n  background: white;\n  padding: 15px;\n  border-radius: 8px;\n  min-height: 200px;\n  max-height: 400px;\n  overflow-y: auto;\n`;\n_c5 = TemplatesList;\nconst TemplateItem = styled.div`\n  padding: 10px;\n  margin: 5px 0;\n  background: #f8f9fa;\n  border-radius: 5px;\n  border-left: 3px solid #9b59b6;\n  \n  .template-name {\n    font-weight: 600;\n    color: #2c3e50;\n    margin-bottom: 5px;\n  }\n  \n  .template-description {\n    font-size: 0.9rem;\n    color: #7f8c8d;\n  }\n`;\n_c6 = TemplateItem;\nconst ModelInfoSection = styled.div`\n  padding: 25px;\n  background: #f8f9fa;\n  border-radius: 10px;\n  \n  h3 {\n    color: #2c3e50;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    \n    .icon {\n      color: #9b59b6;\n    }\n  }\n`;\n_c7 = ModelInfoSection;\nconst ModelStatus = styled.div`\n  background: white;\n  padding: 15px;\n  border-radius: 8px;\n  min-height: 200px;\n  \n  pre {\n    background: #f8f9fa;\n    padding: 10px;\n    border-radius: 5px;\n    overflow-x: auto;\n    font-size: 0.9rem;\n    margin: 10px 0;\n  }\n`;\n_c8 = ModelStatus;\nconst HelpText = styled.div`\n  background: #e3f2fd;\n  padding: 15px;\n  border-radius: 8px;\n  border-left: 4px solid #2196f3;\n  margin-bottom: 20px;\n  \n  .icon {\n    color: #2196f3;\n    margin-right: 8px;\n  }\n  \n  p {\n    margin: 0;\n    color: #1565c0;\n    font-size: 0.95rem;\n    line-height: 1.5;\n  }\n`;\n_c9 = HelpText;\nconst PromptTemplates = ({\n  setIsLoading\n}) => {\n  _s();\n  const [availableTemplates, setAvailableTemplates] = useState([]);\n  const [modelInfo, setModelInfo] = useState(null);\n  const [customTemplate, setCustomTemplate] = useState({\n    name: '',\n    template: '',\n    requiredInputs: ''\n  });\n  const loadAvailableTemplates = async () => {\n    setIsLoading(true);\n    try {\n      const result = await multimodalAPI.getAvailableTemplates();\n      if (result.success) {\n        setAvailableTemplates(result.templates);\n        toast.success(`Loaded ${result.templates.length} templates`);\n      } else {\n        toast.error('Error loading templates');\n      }\n    } catch (error) {\n      console.error('Error loading templates:', error);\n      toast.error(`Error loading templates: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadModelInfo = async () => {\n    setIsLoading(true);\n    try {\n      const result = await multimodalAPI.getModelInfo();\n      if (result.success) {\n        setModelInfo(result.model_info);\n        toast.info('Model information loaded');\n      } else {\n        toast.error('Error loading model information');\n      }\n    } catch (error) {\n      console.error('Error loading model info:', error);\n      toast.error(`Error loading model information: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const createCustomTemplate = async () => {\n    if (!customTemplate.name || !customTemplate.template || !customTemplate.requiredInputs) {\n      toast.error('Please fill in all template fields');\n      return;\n    }\n\n    // Validate JSON format for required inputs\n    try {\n      JSON.parse(customTemplate.requiredInputs);\n    } catch (error) {\n      toast.error('Required inputs must be valid JSON array format');\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n      formData.append('name', customTemplate.name);\n      formData.append('template', customTemplate.template);\n      formData.append('required_inputs', customTemplate.requiredInputs);\n      const result = await multimodalAPI.createCustomTemplate(formData);\n      if (result.success) {\n        toast.success('Template created successfully!');\n        setCustomTemplate({\n          name: '',\n          template: '',\n          requiredInputs: ''\n        });\n        // Reload templates to show the new one\n        loadAvailableTemplates();\n      } else {\n        toast.error('Error creating template');\n      }\n    } catch (error) {\n      console.error('Error creating template:', error);\n      toast.error(`Error creating template: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleTemplateInputChange = (field, value) => {\n    setCustomTemplate(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const loadExampleTemplate = () => {\n    setCustomTemplate({\n      name: 'custom_material_analysis',\n      template: 'Analyze the following material data:\\n\\nTactile Properties: {tactile_data}\\nVisual Description: {text_description}\\nTask: {task_instruction}\\n\\nProvide a comprehensive analysis including material identification, properties, and potential applications.',\n      requiredInputs: '[\"tactile_data\", \"text_description\", \"task_instruction\"]'\n    });\n    toast.info('Example template loaded');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faCode,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), \"Prompt Templates\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Manage and customize prompt templates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SectionGrid, {\n      children: [/*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faList,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), \"Available Templates\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadAvailableTemplates,\n          icon: faDownload,\n          size: \"small\",\n          children: \"Load Available Templates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TemplatesList, {\n          children: availableTemplates.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: '#7f8c8d',\n              textAlign: 'center',\n              marginTop: '50px'\n            },\n            children: \"No templates loaded. Click \\\"Load Available Templates\\\" to view.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this) : availableTemplates.map((template, index) => /*#__PURE__*/_jsxDEV(TemplateItem, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"template-name\",\n              children: template\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"template-description\",\n              children: [\"Built-in template for \", template.replace(/_/g, ' '), \" tasks\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Section, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlus,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), \"Create Custom Template\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HelpText, {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faInfoCircle,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Create custom templates with placeholders like \", \"{tactile_data}\", \", \", \"{text_description}\", \", etc. Required inputs should be a JSON array of placeholder names.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadExampleTemplate,\n          variant: \"secondary\",\n          size: \"small\",\n          style: {\n            marginBottom: '15px'\n          },\n          children: \"Load Example Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Template Name\",\n          value: customTemplate.name,\n          onChange: value => handleTemplateInputChange('name', value),\n          placeholder: \"Enter template name...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Template Content\",\n          value: customTemplate.template,\n          onChange: value => handleTemplateInputChange('template', value),\n          placeholder: \"Enter template with placeholders like {tactile_data}, {text_description}, etc.\",\n          multiline: true,\n          style: {\n            minHeight: '120px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Required Inputs (JSON array)\",\n          value: customTemplate.requiredInputs,\n          onChange: value => handleTemplateInputChange('requiredInputs', value),\n          placeholder: \"[\\\"tactile_data\\\", \\\"text_description\\\", \\\"task_instruction\\\"]\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: createCustomTemplate,\n          icon: faSave,\n          children: \"Save Template\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModelInfoSection, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faInfoCircle,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), \"Model Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: loadModelInfo,\n        icon: faSync,\n        size: \"small\",\n        children: \"Load Model Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModelStatus, {\n        children: !modelInfo ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#7f8c8d',\n            textAlign: 'center',\n            marginTop: '50px'\n          },\n          children: \"No model information loaded. Click \\\"Load Model Information\\\" to view current configuration.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Current Model Configuration:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(modelInfo, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 253,\n    columnNumber: 5\n  }, this);\n};\n_s(PromptTemplates, \"KW1YxY+5VApqvNCfrH5hrV99bXs=\");\n_c0 = PromptTemplates;\nexport default PromptTemplates;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SectionHeader\");\n$RefreshReg$(_c3, \"SectionGrid\");\n$RefreshReg$(_c4, \"Section\");\n$RefreshReg$(_c5, \"TemplatesList\");\n$RefreshReg$(_c6, \"TemplateItem\");\n$RefreshReg$(_c7, \"ModelInfoSection\");\n$RefreshReg$(_c8, \"ModelStatus\");\n$RefreshReg$(_c9, \"HelpText\");\n$RefreshReg$(_c0, \"PromptTemplates\");","map":{"version":3,"names":["React","useState","styled","toast","FontAwesomeIcon","faCode","faList","faPlus","faSave","faInfoCircle","faSync","faDownload","multimodalAPI","InputField","Button","jsxDEV","_jsxDEV","Container","div","_c","SectionHeader","_c2","SectionGrid","_c3","Section","_c4","TemplatesList","_c5","TemplateItem","_c6","ModelInfoSection","_c7","ModelStatus","_c8","HelpText","_c9","PromptTemplates","setIsLoading","_s","availableTemplates","setAvailableTemplates","modelInfo","setModelInfo","customTemplate","setCustomTemplate","name","template","requiredInputs","loadAvailableTemplates","result","getAvailableTemplates","success","templates","length","error","console","message","loadModelInfo","getModelInfo","model_info","info","createCustomTemplate","JSON","parse","formData","FormData","append","handleTemplateInputChange","field","value","prev","loadExampleTemplate","children","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","style","color","textAlign","marginTop","map","index","replace","variant","marginBottom","label","onChange","placeholder","multiline","minHeight","stringify","_c0","$RefreshReg$"],"sources":["E:/python project/Real new/frontend/src/components/PromptTemplates.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faCode, \r\n  faList, \r\n  faPlus, \r\n  faSave,\r\n  faInfoCircle,\r\n  faSync,\r\n  faDownload \r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { multimodalAPI } from '../services/api';\r\nimport InputField from './common/InputField';\r\nimport Button from './common/Button';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst SectionHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  \r\n  h2 {\r\n    font-size: 2rem;\r\n    color: #2c3e50;\r\n    margin-bottom: 10px;\r\n    \r\n    .icon {\r\n      color: #9b59b6;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  \r\n  p {\r\n    color: #7f8c8d;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst SectionGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 30px;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  padding: 25px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  \r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    \r\n    .icon {\r\n      color: #9b59b6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TemplatesList = styled.div`\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  min-height: 200px;\r\n  max-height: 400px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst TemplateItem = styled.div`\r\n  padding: 10px;\r\n  margin: 5px 0;\r\n  background: #f8f9fa;\r\n  border-radius: 5px;\r\n  border-left: 3px solid #9b59b6;\r\n  \r\n  .template-name {\r\n    font-weight: 600;\r\n    color: #2c3e50;\r\n    margin-bottom: 5px;\r\n  }\r\n  \r\n  .template-description {\r\n    font-size: 0.9rem;\r\n    color: #7f8c8d;\r\n  }\r\n`;\r\n\r\nconst ModelInfoSection = styled.div`\r\n  padding: 25px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  \r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    \r\n    .icon {\r\n      color: #9b59b6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ModelStatus = styled.div`\r\n  background: white;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  min-height: 200px;\r\n  \r\n  pre {\r\n    background: #f8f9fa;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    overflow-x: auto;\r\n    font-size: 0.9rem;\r\n    margin: 10px 0;\r\n  }\r\n`;\r\n\r\nconst HelpText = styled.div`\r\n  background: #e3f2fd;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  border-left: 4px solid #2196f3;\r\n  margin-bottom: 20px;\r\n  \r\n  .icon {\r\n    color: #2196f3;\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  p {\r\n    margin: 0;\r\n    color: #1565c0;\r\n    font-size: 0.95rem;\r\n    line-height: 1.5;\r\n  }\r\n`;\r\n\r\nconst PromptTemplates = ({ setIsLoading }) => {\r\n  const [availableTemplates, setAvailableTemplates] = useState([]);\r\n  const [modelInfo, setModelInfo] = useState(null);\r\n  const [customTemplate, setCustomTemplate] = useState({\r\n    name: '',\r\n    template: '',\r\n    requiredInputs: ''\r\n  });\r\n\r\n  const loadAvailableTemplates = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await multimodalAPI.getAvailableTemplates();\r\n      if (result.success) {\r\n        setAvailableTemplates(result.templates);\r\n        toast.success(`Loaded ${result.templates.length} templates`);\r\n      } else {\r\n        toast.error('Error loading templates');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading templates:', error);\r\n      toast.error(`Error loading templates: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadModelInfo = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const result = await multimodalAPI.getModelInfo();\r\n      if (result.success) {\r\n        setModelInfo(result.model_info);\r\n        toast.info('Model information loaded');\r\n      } else {\r\n        toast.error('Error loading model information');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading model info:', error);\r\n      toast.error(`Error loading model information: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const createCustomTemplate = async () => {\r\n    if (!customTemplate.name || !customTemplate.template || !customTemplate.requiredInputs) {\r\n      toast.error('Please fill in all template fields');\r\n      return;\r\n    }\r\n\r\n    // Validate JSON format for required inputs\r\n    try {\r\n      JSON.parse(customTemplate.requiredInputs);\r\n    } catch (error) {\r\n      toast.error('Required inputs must be valid JSON array format');\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('name', customTemplate.name);\r\n      formData.append('template', customTemplate.template);\r\n      formData.append('required_inputs', customTemplate.requiredInputs);\r\n\r\n      const result = await multimodalAPI.createCustomTemplate(formData);\r\n      if (result.success) {\r\n        toast.success('Template created successfully!');\r\n        setCustomTemplate({ name: '', template: '', requiredInputs: '' });\r\n        // Reload templates to show the new one\r\n        loadAvailableTemplates();\r\n      } else {\r\n        toast.error('Error creating template');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error creating template:', error);\r\n      toast.error(`Error creating template: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTemplateInputChange = (field, value) => {\r\n    setCustomTemplate(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const loadExampleTemplate = () => {\r\n    setCustomTemplate({\r\n      name: 'custom_material_analysis',\r\n      template: 'Analyze the following material data:\\n\\nTactile Properties: {tactile_data}\\nVisual Description: {text_description}\\nTask: {task_instruction}\\n\\nProvide a comprehensive analysis including material identification, properties, and potential applications.',\r\n      requiredInputs: '[\"tactile_data\", \"text_description\", \"task_instruction\"]'\r\n    });\r\n    toast.info('Example template loaded');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SectionHeader>\r\n        <h2>\r\n          <FontAwesomeIcon icon={faCode} className=\"icon\" />\r\n          Prompt Templates\r\n        </h2>\r\n        <p>Manage and customize prompt templates</p>\r\n      </SectionHeader>\r\n\r\n      <SectionGrid>\r\n        <Section>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faList} className=\"icon\" />\r\n            Available Templates\r\n          </h3>\r\n          \r\n          <Button onClick={loadAvailableTemplates} icon={faDownload} size=\"small\">\r\n            Load Available Templates\r\n          </Button>\r\n          \r\n          <TemplatesList>\r\n            {availableTemplates.length === 0 ? (\r\n              <p style={{ color: '#7f8c8d', textAlign: 'center', marginTop: '50px' }}>\r\n                No templates loaded. Click \"Load Available Templates\" to view.\r\n              </p>\r\n            ) : (\r\n              availableTemplates.map((template, index) => (\r\n                <TemplateItem key={index}>\r\n                  <div className=\"template-name\">{template}</div>\r\n                  <div className=\"template-description\">\r\n                    Built-in template for {template.replace(/_/g, ' ')} tasks\r\n                  </div>\r\n                </TemplateItem>\r\n              ))\r\n            )}\r\n          </TemplatesList>\r\n        </Section>\r\n\r\n        <Section>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faPlus} className=\"icon\" />\r\n            Create Custom Template\r\n          </h3>\r\n          \r\n          <HelpText>\r\n            <FontAwesomeIcon icon={faInfoCircle} className=\"icon\" />\r\n            <p>\r\n              Create custom templates with placeholders like {\"{tactile_data}\"}, {\"{text_description}\"}, etc. \r\n              Required inputs should be a JSON array of placeholder names.\r\n            </p>\r\n          </HelpText>\r\n\r\n          <Button \r\n            onClick={loadExampleTemplate} \r\n            variant=\"secondary\" \r\n            size=\"small\"\r\n            style={{ marginBottom: '15px' }}\r\n          >\r\n            Load Example Template\r\n          </Button>\r\n\r\n          <InputField\r\n            label=\"Template Name\"\r\n            value={customTemplate.name}\r\n            onChange={(value) => handleTemplateInputChange('name', value)}\r\n            placeholder=\"Enter template name...\"\r\n          />\r\n          \r\n          <InputField\r\n            label=\"Template Content\"\r\n            value={customTemplate.template}\r\n            onChange={(value) => handleTemplateInputChange('template', value)}\r\n            placeholder=\"Enter template with placeholders like {tactile_data}, {text_description}, etc.\"\r\n            multiline\r\n            style={{ minHeight: '120px' }}\r\n          />\r\n          \r\n          <InputField\r\n            label=\"Required Inputs (JSON array)\"\r\n            value={customTemplate.requiredInputs}\r\n            onChange={(value) => handleTemplateInputChange('requiredInputs', value)}\r\n            placeholder='[\"tactile_data\", \"text_description\", \"task_instruction\"]'\r\n            multiline\r\n          />\r\n          \r\n          <Button onClick={createCustomTemplate} icon={faSave}>\r\n            Save Template\r\n          </Button>\r\n        </Section>\r\n      </SectionGrid>\r\n\r\n      <ModelInfoSection>\r\n        <h3>\r\n          <FontAwesomeIcon icon={faInfoCircle} className=\"icon\" />\r\n          Model Information\r\n        </h3>\r\n        \r\n        <Button onClick={loadModelInfo} icon={faSync} size=\"small\">\r\n          Load Model Information\r\n        </Button>\r\n        \r\n        <ModelStatus>\r\n          {!modelInfo ? (\r\n            <p style={{ color: '#7f8c8d', textAlign: 'center', marginTop: '50px' }}>\r\n              No model information loaded. Click \"Load Model Information\" to view current configuration.\r\n            </p>\r\n          ) : (\r\n            <div>\r\n              <h4>Current Model Configuration:</h4>\r\n              <pre>{JSON.stringify(modelInfo, null, 2)}</pre>\r\n            </div>\r\n          )}\r\n        </ModelStatus>\r\n      </ModelInfoSection>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default PromptTemplates; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,MAAM,EACNC,YAAY,EACZC,MAAM,EACNC,UAAU,QACL,mCAAmC;AAE1C,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,OAAOC,MAAM,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,SAAS,GAAGf,MAAM,CAACgB,GAAG,EAAE;AAACC,EAAA,GAAzBF,SAAS;AAEf,MAAMG,aAAa,GAAGlB,MAAM,CAACgB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAnBID,aAAa;AAqBnB,MAAME,WAAW,GAAGpB,MAAM,CAACgB,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GATID,WAAW;AAWjB,MAAME,OAAO,GAAGtB,MAAM,CAACgB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAhBID,OAAO;AAkBb,MAAME,aAAa,GAAGxB,MAAM,CAACgB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GAPID,aAAa;AASnB,MAAME,YAAY,GAAG1B,MAAM,CAACgB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GAjBID,YAAY;AAmBlB,MAAME,gBAAgB,GAAG5B,MAAM,CAACgB,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}