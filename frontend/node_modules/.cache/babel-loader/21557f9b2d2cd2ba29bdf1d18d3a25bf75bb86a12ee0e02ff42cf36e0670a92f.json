{"ast":null,"code":"var _jsxFileName = \"E:\\\\python project\\\\Real new\\\\frontend\\\\src\\\\components\\\\MainInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload, faImage, faHandPaper, faFileText, faPlay, faTrash, faCog, faMagic, faHistory, faSpinner, faCheckCircle } from '@fortawesome/free-solid-svg-icons';\nimport { multimodalAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 15px;\n  padding: 30px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\n`;\n_c = MainContainer;\nconst Section = styled.div`\n  margin-bottom: 30px;\n  \n  h2 {\n    font-size: 1.3rem;\n    color: #2c3e50;\n    margin-bottom: 15px;\n    display: flex;\n    align-items: center;\n    \n    .icon {\n      margin-right: 8px;\n      color: #667eea;\n    }\n  }\n`;\n_c2 = Section;\nconst DataInputGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: 20px;\n  margin-bottom: 30px;\n  \n  @media (max-width: 768px) {\n    grid-template-columns: 1fr;\n  }\n`;\n_c3 = DataInputGrid;\nconst InputCard = styled.div`\n  border: 2px solid #e9ecef;\n  border-radius: 12px;\n  padding: 20px;\n  transition: all 0.3s ease;\n  \n  &:hover {\n    border-color: #667eea;\n    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.1);\n  }\n  \n  h3 {\n    margin: 0 0 15px 0;\n    color: #2c3e50;\n    font-size: 1rem;\n    display: flex;\n    align-items: center;\n    \n    .icon {\n      margin-right: 8px;\n      color: #667eea;\n    }\n  }\n`;\n_c4 = InputCard;\nconst FileUploadArea = styled.div`\n  border: 2px dashed #dee2e6;\n  border-radius: 8px;\n  padding: 30px;\n  text-align: center;\n  transition: all 0.3s ease;\n  cursor: pointer;\n  min-height: 120px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  \n  &:hover, &.dragover {\n    border-color: #667eea;\n    background: rgba(102, 126, 234, 0.05);\n  }\n  \n  .upload-icon {\n    font-size: 2rem;\n    color: #dee2e6;\n    margin-bottom: 10px;\n  }\n  \n  &.has-file {\n    border-color: #28a745;\n    background: rgba(40, 167, 69, 0.05);\n    \n    .upload-icon {\n      color: #28a745;\n    }\n  }\n  \n  p {\n    margin: 0;\n    color: #6c757d;\n    font-size: 0.9rem;\n  }\n  \n  .file-name {\n    color: #28a745;\n    font-weight: 500;\n    margin-top: 5px;\n  }\n`;\n_c5 = FileUploadArea;\nconst TextArea = styled.textarea`\n  width: 100%;\n  min-height: 100px;\n  padding: 12px;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-family: inherit;\n  font-size: 0.9rem;\n  resize: vertical;\n  transition: border-color 0.3s ease;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n  \n  &::placeholder {\n    color: #adb5bd;\n  }\n`;\n_c6 = TextArea;\nconst PromptSection = styled.div`\n  border: 2px solid #f8f9fa;\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n`;\n_c7 = PromptSection;\nconst PromptTypeSelector = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 15px;\n  flex-wrap: wrap;\n`;\n_c8 = PromptTypeSelector;\nconst RadioOption = styled.label`\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  \n  input {\n    margin-right: 8px;\n  }\n  \n  span {\n    font-size: 0.9rem;\n    color: #495057;\n  }\n`;\n_c9 = RadioOption;\nconst PromptEditor = styled.div`\n  h4 {\n    margin: 0 0 10px 0;\n    color: #2c3e50;\n    font-size: 1rem;\n    display: flex;\n    align-items: center;\n    \n    .icon {\n      margin-right: 8px;\n      color: #667eea;\n    }\n  }\n`;\n_c0 = PromptEditor;\nconst PromptTextArea = styled.textarea`\n  width: 100%;\n  min-height: 120px;\n  padding: 15px;\n  border: 2px solid #e9ecef;\n  border-radius: 8px;\n  font-family: 'Courier New', monospace;\n  font-size: 0.85rem;\n  line-height: 1.5;\n  background: #f8f9fa;\n  resize: vertical;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n    background: white;\n  }\n`;\n_c1 = PromptTextArea;\nconst CheckboxOption = styled.label`\n  display: flex;\n  align-items: center;\n  margin-top: 10px;\n  cursor: pointer;\n  \n  input {\n    margin-right: 8px;\n  }\n  \n  span {\n    font-size: 0.9rem;\n    color: #495057;\n  }\n`;\n_c10 = CheckboxOption;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 15px;\n  justify-content: center;\n  margin-bottom: 30px;\n`;\n_c11 = ButtonGroup;\nconst Button = styled.button`\n  padding: 12px 24px;\n  border: none;\n  border-radius: 8px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  \n  &.primary {\n    background: #667eea;\n    color: white;\n    \n    &:hover {\n      background: #5a67d8;\n      transform: translateY(-2px);\n    }\n  }\n  \n  &.secondary {\n    background: #e9ecef;\n    color: #495057;\n    \n    &:hover {\n      background: #dee2e6;\n    }\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n    transform: none;\n  }\n`;\n_c12 = Button;\nconst ResponseSection = styled.div`\n  border: 2px solid #f8f9fa;\n  border-radius: 12px;\n  padding: 20px;\n  min-height: 200px;\n  \n  h3 {\n    margin: 0 0 15px 0;\n    color: #2c3e50;\n    font-size: 1.1rem;\n    display: flex;\n    align-items: center;\n    \n    .icon {\n      margin-right: 8px;\n      color: #28a745;\n    }\n  }\n  \n  .no-response {\n    text-align: center;\n    color: #adb5bd;\n    font-style: italic;\n    padding: 40px 20px;\n  }\n  \n  .response-content {\n    background: #f8f9fa;\n    border-radius: 8px;\n    padding: 20px;\n    white-space: pre-wrap;\n    font-family: inherit;\n    line-height: 1.6;\n  }\n`;\n_c13 = ResponseSection;\nconst StatusIndicator = styled.div`\n  margin-top: 8px;\n  padding: 6px 10px;\n  border-radius: 6px;\n  font-size: 0.8rem;\n  font-weight: 500;\n  \n  &.success {\n    background: rgba(40, 167, 69, 0.1);\n    color: #28a745;\n    border: 1px solid rgba(40, 167, 69, 0.2);\n  }\n  \n  &.empty {\n    background: rgba(108, 117, 125, 0.1);\n    color: #6c757d;\n    border: 1px solid rgba(108, 117, 125, 0.2);\n  }\n`;\n_c14 = StatusIndicator;\nconst OptimizationSection = styled.div`\n  background: rgba(102, 126, 234, 0.05);\n  border: 2px solid rgba(102, 126, 234, 0.1);\n  border-radius: 12px;\n  padding: 20px;\n  margin-bottom: 20px;\n  \n  h4 {\n    margin: 0 0 15px 0;\n    color: #2c3e50;\n    font-size: 1rem;\n    display: flex;\n    align-items: center;\n    \n    .icon {\n      margin-right: 8px;\n      color: #667eea;\n    }\n  }\n`;\n_c15 = OptimizationSection;\nconst OptimizationControls = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15px;\n  margin-bottom: 15px;\n  flex-wrap: wrap;\n`;\n_c16 = OptimizationControls;\nconst OptimizationButton = styled.button`\n  padding: 8px 16px;\n  border: 1px solid #667eea;\n  border-radius: 6px;\n  background: ${props => props.loading ? '#f8f9fa' : '#667eea'};\n  color: ${props => props.loading ? '#6c757d' : 'white'};\n  font-size: 0.9rem;\n  font-weight: 500;\n  cursor: ${props => props.loading ? 'not-allowed' : 'pointer'};\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 6px;\n  \n  &:hover:not(:disabled) {\n    background: #5a67d8;\n    transform: translateY(-1px);\n  }\n  \n  &:disabled {\n    opacity: 0.6;\n  }\n`;\n_c17 = OptimizationButton;\nconst OptimizationSelect = styled.select`\n  padding: 6px 12px;\n  border: 1px solid #e9ecef;\n  border-radius: 6px;\n  font-size: 0.9rem;\n  background: white;\n  \n  &:focus {\n    outline: none;\n    border-color: #667eea;\n  }\n`;\n_c18 = OptimizationSelect;\nconst OptimizationStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-top: 10px;\n  padding: 8px 12px;\n  background: ${props => props.optimized ? 'rgba(40, 167, 69, 0.1)' : 'rgba(108, 117, 125, 0.1)'};\n  border-radius: 6px;\n  font-size: 0.8rem;\n  \n  .status-text {\n    color: ${props => props.optimized ? '#28a745' : '#6c757d'};\n    font-weight: 500;\n  }\n  \n  .version {\n    color: #667eea;\n    font-weight: 600;\n  }\n`;\n_c19 = OptimizationStatus;\nconst MainInterface = ({\n  setIsLoading\n}) => {\n  _s();\n  const [tactileFile, setTactileFile] = useState(null);\n  const [visualFile, setVisualFile] = useState(null);\n  const [textualInput, setTextualInput] = useState('');\n  const [promptType, setPromptType] = useState('Vision-Text');\n  const [promptText, setPromptText] = useState('');\n  const [addContextualInfo, setAddContextualInfo] = useState(false);\n  const [response, setResponse] = useState(null);\n\n  // Prompt optimization states\n  const [autoOptimize, setAutoOptimize] = useState(true);\n  const [optimizationStrategy, setOptimizationStrategy] = useState('Balanced Optimization');\n  const [isOptimizing, setIsOptimizing] = useState(false);\n  const [optimizationVersion, setOptimizationVersion] = useState('v2');\n  const [promptHistory, setPromptHistory] = useState([]);\n  const [isOptimized, setIsOptimized] = useState(false);\n\n  // Generate prompt based on inputs\n  const generateBasePrompt = () => {\n    let sections = [];\n\n    // Add content based on what's available\n    if (tactileFile) {\n      sections.push(`Tactile Data File: ${tactileFile.name}`);\n    }\n    if (visualFile) {\n      sections.push(`Visual Data File: ${visualFile.name}`);\n    }\n    if (textualInput.trim()) {\n      sections.push(`Text Input: ${textualInput}`);\n    }\n    if (addContextualInfo) {\n      sections.push('Additional Context: Please provide detailed analysis considering all available modalities and their interactions.');\n    }\n    return sections.length > 0 ? sections.join('\\n\\n') : 'No input provided yet.';\n  };\n\n  // Generate optimized prompt based on type and inputs\n  const generateOptimizedPrompt = () => {\n    if (promptType === 'Vision-Text') {\n      return `Perform a detailed comprehensive multimodal analysis with cross-referencing of the following visual and textual information:\n\n**Textual Input Analysis:**\nImage Description:\nText Input:\n\nProvide actionable insights with confidence levels utilizing the provided the visual and textual context.\n\n[Context]`;\n    }\n\n    // Add other prompt types as needed\n    return generateBasePrompt();\n  };\n\n  // Optimize prompt using AI techniques\n  const optimizePrompt = async basePrompt => {\n    setIsOptimizing(true);\n\n    // Simulate AI optimization process\n    await new Promise(resolve => setTimeout(resolve, 1500));\n    const optimizedPrompt = generateOptimizedPrompt();\n\n    // Add to history\n    setPromptHistory(prev => [...prev, {\n      version: optimizationVersion,\n      prompt: basePrompt,\n      timestamp: new Date()\n    }]);\n    setIsOptimizing(false);\n    setIsOptimized(true);\n    return optimizedPrompt;\n  };\n\n  // Listen for input changes and auto-update prompt\n  React.useEffect(() => {\n    const updatePrompt = async () => {\n      const basePrompt = generateBasePrompt();\n      if (autoOptimize && (tactileFile || visualFile || textualInput.trim())) {\n        const optimized = await optimizePrompt(basePrompt);\n        setPromptText(optimized);\n      } else {\n        setPromptText(basePrompt);\n        setIsOptimized(false);\n      }\n    };\n    updatePrompt();\n  }, [tactileFile, visualFile, textualInput, addContextualInfo, autoOptimize]);\n\n  // Manual optimization handler\n  const handleManualOptimization = async () => {\n    const basePrompt = generateBasePrompt();\n    const optimized = await optimizePrompt(basePrompt);\n    setPromptText(optimized);\n  };\n\n  // Revert to previous version\n  const handleRevert = () => {\n    if (promptHistory.length > 0) {\n      const lastVersion = promptHistory[promptHistory.length - 1];\n      setPromptText(lastVersion.prompt);\n      setPromptHistory(prev => prev.slice(0, -1));\n      setIsOptimized(false);\n    }\n  };\n\n  // Insert example prompt\n  const handleInsertExample = () => {\n    const examplePrompt = `Perform a detailed comprehensive multimodal analysis with cross-referencing of the following visual and textual information:\n\n**Textual Input Analysis:**\nImage Description: [Your image description here]\nText Input: [Your text input here]\n\nProvide actionable insights with confidence levels utilizing the provided the visual and textual context.\n\n[Context]`;\n    setPromptText(examplePrompt);\n    setIsOptimized(false);\n  };\n  const handleFileUpload = (file, type) => {\n    if (type === 'tactile') {\n      setTactileFile(file);\n    } else if (type === 'visual') {\n      setVisualFile(file);\n    }\n  };\n  const handleDrop = (e, type) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0], type);\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const clearInputs = () => {\n    setTactileFile(null);\n    setVisualFile(null);\n    setTextualInput('');\n    setResponse(null);\n  };\n  const generateResponse = async () => {\n    try {\n      setIsLoading(true);\n\n      // Check at least one input is provided\n      if (!tactileFile && !visualFile && !textualInput.trim()) {\n        toast.error('Please provide at least one input: tactile file, image, or text');\n        return;\n      }\n\n      // Prepare data\n      const formData = new FormData();\n      if (tactileFile) {\n        formData.append('tactile_file', tactileFile);\n      }\n      if (visualFile) {\n        formData.append('image', visualFile);\n      }\n      if (textualInput.trim()) {\n        formData.append('text_context', textualInput);\n      }\n\n      // Use the optimized prompt or generate a fallback\n      let apiPrompt = promptText || 'Please analyze the provided data';\n      if (!promptText && promptType === 'Question Answering' && textualInput.trim()) {\n        apiPrompt = `Please answer the following question: ${textualInput}`;\n      } else if (!promptText && textualInput.trim()) {\n        apiPrompt = `Please analyze the provided data. Additional context: ${textualInput}`;\n      }\n      formData.append('prompt', apiPrompt);\n      formData.append('prompt_type', promptType);\n      formData.append('add_contextual_info', addContextualInfo);\n      console.log('Sending request to API...', {\n        prompt: apiPrompt,\n        promptType: promptType,\n        hasImage: !!visualFile,\n        hasTactileFile: !!tactileFile,\n        hasTextContext: !!textualInput.trim()\n      });\n\n      // Call unified multimodal analysis API\n      const result = await multimodalAPI.processUnifiedAnalysis(formData);\n      console.log('API response:', result);\n      if (result.success) {\n        setResponse(result.response);\n        toast.success('Analysis completed!');\n      } else {\n        toast.error(`Analysis failed: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Request error:', error);\n      toast.error(`Request failed: ${error.message || error.error || 'Unknown error'}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faUpload,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this), \"Data Input Section\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataInputGrid, {\n        children: [/*#__PURE__*/_jsxDEV(InputCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHandPaper,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 646,\n              columnNumber: 15\n            }, this), \"Tactile Data Input\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 645,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUploadArea, {\n            className: tactileFile ? 'has-file' : '',\n            onDrop: e => handleDrop(e, 'tactile'),\n            onDragOver: handleDragOver,\n            onClick: () => document.getElementById('tactile-input').click(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUpload,\n              className: \"upload-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), tactileFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Tactile file uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 658,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"file-name\",\n                children: tactileFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Upload Tactile File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"tactile-input\",\n              type: \"file\",\n              style: {\n                display: 'none'\n              },\n              accept: \".csv,.json,.txt\",\n              onChange: e => handleFileUpload(e.target.files[0], 'tactile')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 664,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 649,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            className: tactileFile ? 'success' : 'empty',\n            children: tactileFile ? `File uploaded: ${tactileFile.name}` : 'No file uploaded'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faImage,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this), \"Visual Data Input\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUploadArea, {\n            className: visualFile ? 'has-file' : '',\n            onDrop: e => handleDrop(e, 'visual'),\n            onDragOver: handleDragOver,\n            onClick: () => document.getElementById('visual-input').click(),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUpload,\n              className: \"upload-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 15\n            }, this), visualFile ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Image uploaded\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"file-name\",\n                children: visualFile.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 693,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No image uploaded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"visual-input\",\n              type: \"file\",\n              style: {\n                display: 'none'\n              },\n              accept: \"image/*\",\n              onChange: e => handleFileUpload(e.target.files[0], 'visual')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 698,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            className: visualFile ? 'success' : 'empty',\n            children: visualFile ? `Image uploaded: ${visualFile.name}` : 'No image uploaded'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 706,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Manual image description (optional)\",\n            style: {\n              marginTop: '10px',\n              minHeight: '60px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputCard, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faFileText,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this), \"Textual Input\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextArea, {\n            placeholder: \"Enter additional text, questions, or queries here...\",\n            value: textualInput,\n            onChange: e => setTextualInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(StatusIndicator, {\n            className: textualInput.trim() ? 'success' : 'empty',\n            children: textualInput.trim() ? `${textualInput.length} characters entered` : 'No text entered'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 716,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlay,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 736,\n          columnNumber: 11\n        }, this), \"Prompt Engineering & Controls\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PromptSection, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginBottom: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              margin: '0 0 10px 0',\n              color: '#2c3e50'\n            },\n            children: \"Prompt Type Selection\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PromptTypeSelector, {\n            children: [/*#__PURE__*/_jsxDEV(RadioOption, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"promptType\",\n                value: \"Tactile-Text\",\n                checked: promptType === 'Tactile-Text',\n                onChange: e => setPromptType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tactile-Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 752,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioOption, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"promptType\",\n                value: \"Vision-Text\",\n                checked: promptType === 'Vision-Text',\n                onChange: e => setPromptType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Vision-Text\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 762,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioOption, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"promptType\",\n                value: \"Tactile-Vision-Text Combined\",\n                checked: promptType === 'Tactile-Vision-Text Combined',\n                onChange: e => setPromptType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Tactile-Vision-Text Combined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(RadioOption, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"promptType\",\n                value: \"Question Answering\",\n                checked: promptType === 'Question Answering',\n                onChange: e => setPromptType(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 775,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Question Answering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(OptimizationSection, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faCog,\n              className: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 789,\n              columnNumber: 15\n            }, this), \"Automatic Prompt Optimization\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OptimizationControls, {\n            children: [/*#__PURE__*/_jsxDEV(CheckboxOption, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: autoOptimize,\n                onChange: e => setAutoOptimize(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 795,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Auto-optimize\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 794,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OptimizationSelect, {\n              value: optimizationStrategy,\n              onChange: e => setOptimizationStrategy(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Balanced Optimization\",\n                children: \"Balanced Optimization\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Clarity Focus\",\n                children: \"Clarity Focus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 808,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Structure Focus\",\n                children: \"Structure Focus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 809,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Specificity Focus\",\n                children: \"Specificity Focus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 810,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 803,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OptimizationButton, {\n              onClick: handleManualOptimization,\n              loading: isOptimizing,\n              disabled: isOptimizing,\n              children: [isOptimizing ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faSpinner,\n                spin: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faMagic\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 821,\n                columnNumber: 19\n              }, this), \"Optimize Prompt\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 15\n            }, this), promptHistory.length > 0 && /*#__PURE__*/_jsxDEV(OptimizationButton, {\n              onClick: handleRevert,\n              style: {\n                background: '#6c757d',\n                borderColor: '#6c757d'\n              },\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faHistory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 19\n              }, this), \"Revert\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 827,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: '#6c757d',\n                fontSize: '0.8rem'\n              },\n              children: [\"Optimization \", optimizationVersion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 836,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(OptimizationStatus, {\n            optimized: isOptimized,\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: isOptimized ? faCheckCircle : faCog,\n              style: {\n                color: isOptimized ? '#28a745' : '#6c757d'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"status-text\",\n              children: isOptimizing ? 'Optimizing...' : isOptimized ? 'This prompt has been optimized using AI prompt engineering techniques' : 'Ready to process multimodal data'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 15\n            }, this), isOptimized && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"version\",\n              children: \"Auto-optimized\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PromptEditor, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faFileText,\n                className: \"icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this), \"Prompt Preview/Editor\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(OptimizationButton, {\n              onClick: handleInsertExample,\n              style: {\n                background: '#ffc107',\n                borderColor: '#ffc107',\n                color: '#212529',\n                fontSize: '0.8rem',\n                padding: '6px 12px'\n              },\n              children: \"Insert Example\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 861,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PromptTextArea, {\n            value: promptText,\n            onChange: e => setPromptText(e.target.value),\n            placeholder: \"Prompt content will appear here...\",\n            style: {\n              background: '#f8f9fa'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CheckboxOption, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: addContextualInfo,\n              onChange: e => setAddContextualInfo(e.target.checked)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Add Contextual Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 888,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"primary\",\n          onClick: generateResponse,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 895,\n            columnNumber: 13\n          }, this), \"Generate Response\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 894,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"secondary\",\n          onClick: clearInputs,\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this), \"Clear Inputs\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 734,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: /*#__PURE__*/_jsxDEV(ResponseSection, {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faPlay,\n            className: \"icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this), \"AI Response Output\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), response ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"response-content\",\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 913,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"no-response\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No response generated yet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Configure your inputs and click \\\"Generate Response\\\" to see AI analysis\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 634,\n    columnNumber: 5\n  }, this);\n};\n_s(MainInterface, \"rNeoAJDPfQRxfttfsb3u5gS9c/o=\");\n_c20 = MainInterface;\nexport default MainInterface;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Section\");\n$RefreshReg$(_c3, \"DataInputGrid\");\n$RefreshReg$(_c4, \"InputCard\");\n$RefreshReg$(_c5, \"FileUploadArea\");\n$RefreshReg$(_c6, \"TextArea\");\n$RefreshReg$(_c7, \"PromptSection\");\n$RefreshReg$(_c8, \"PromptTypeSelector\");\n$RefreshReg$(_c9, \"RadioOption\");\n$RefreshReg$(_c0, \"PromptEditor\");\n$RefreshReg$(_c1, \"PromptTextArea\");\n$RefreshReg$(_c10, \"CheckboxOption\");\n$RefreshReg$(_c11, \"ButtonGroup\");\n$RefreshReg$(_c12, \"Button\");\n$RefreshReg$(_c13, \"ResponseSection\");\n$RefreshReg$(_c14, \"StatusIndicator\");\n$RefreshReg$(_c15, \"OptimizationSection\");\n$RefreshReg$(_c16, \"OptimizationControls\");\n$RefreshReg$(_c17, \"OptimizationButton\");\n$RefreshReg$(_c18, \"OptimizationSelect\");\n$RefreshReg$(_c19, \"OptimizationStatus\");\n$RefreshReg$(_c20, \"MainInterface\");","map":{"version":3,"names":["React","useState","styled","toast","FontAwesomeIcon","faUpload","faImage","faHandPaper","faFileText","faPlay","faTrash","faCog","faMagic","faHistory","faSpinner","faCheckCircle","multimodalAPI","jsxDEV","_jsxDEV","Fragment","_Fragment","MainContainer","div","_c","Section","_c2","DataInputGrid","_c3","InputCard","_c4","FileUploadArea","_c5","TextArea","textarea","_c6","PromptSection","_c7","PromptTypeSelector","_c8","RadioOption","label","_c9","PromptEditor","_c0","PromptTextArea","_c1","CheckboxOption","_c10","ButtonGroup","_c11","Button","button","_c12","ResponseSection","_c13","StatusIndicator","_c14","OptimizationSection","_c15","OptimizationControls","_c16","OptimizationButton","props","loading","_c17","OptimizationSelect","select","_c18","OptimizationStatus","optimized","_c19","MainInterface","setIsLoading","_s","tactileFile","setTactileFile","visualFile","setVisualFile","textualInput","setTextualInput","promptType","setPromptType","promptText","setPromptText","addContextualInfo","setAddContextualInfo","response","setResponse","autoOptimize","setAutoOptimize","optimizationStrategy","setOptimizationStrategy","isOptimizing","setIsOptimizing","optimizationVersion","setOptimizationVersion","promptHistory","setPromptHistory","isOptimized","setIsOptimized","generateBasePrompt","sections","push","name","trim","length","join","generateOptimizedPrompt","optimizePrompt","basePrompt","Promise","resolve","setTimeout","optimizedPrompt","prev","version","prompt","timestamp","Date","useEffect","updatePrompt","handleManualOptimization","handleRevert","lastVersion","slice","handleInsertExample","examplePrompt","handleFileUpload","file","type","handleDrop","e","preventDefault","files","dataTransfer","handleDragOver","clearInputs","generateResponse","error","formData","FormData","append","apiPrompt","console","log","hasImage","hasTactileFile","hasTextContext","result","processUnifiedAnalysis","success","message","children","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","onDrop","onDragOver","onClick","document","getElementById","click","id","style","display","accept","onChange","target","placeholder","marginTop","minHeight","value","marginBottom","margin","color","checked","disabled","spin","background","borderColor","fontSize","justifyContent","alignItems","padding","_c20","$RefreshReg$"],"sources":["E:/python project/Real new/frontend/src/components/MainInterface.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faUpload, \r\n  faImage, \r\n  faHandPaper, \r\n  faFileText,\r\n  faPlay,\r\n  faTrash,\r\n  faCog,\r\n  faMagic,\r\n  faHistory,\r\n  faSpinner,\r\n  faCheckCircle\r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { multimodalAPI } from '../services/api';\r\n\r\nconst MainContainer = styled.div`\r\n  background: rgba(255, 255, 255, 0.95);\r\n  border-radius: 15px;\r\n  padding: 30px;\r\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);\r\n`;\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 30px;\r\n  \r\n  h2 {\r\n    font-size: 1.3rem;\r\n    color: #2c3e50;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .icon {\r\n      margin-right: 8px;\r\n      color: #667eea;\r\n    }\r\n  }\r\n`;\r\n\r\nconst DataInputGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n  \r\n  @media (max-width: 768px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nconst InputCard = styled.div`\r\n  border: 2px solid #e9ecef;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    border-color: #667eea;\r\n    box-shadow: 0 5px 15px rgba(102, 126, 234, 0.1);\r\n  }\r\n  \r\n  h3 {\r\n    margin: 0 0 15px 0;\r\n    color: #2c3e50;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .icon {\r\n      margin-right: 8px;\r\n      color: #667eea;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FileUploadArea = styled.div`\r\n  border: 2px dashed #dee2e6;\r\n  border-radius: 8px;\r\n  padding: 30px;\r\n  text-align: center;\r\n  transition: all 0.3s ease;\r\n  cursor: pointer;\r\n  min-height: 120px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  \r\n  &:hover, &.dragover {\r\n    border-color: #667eea;\r\n    background: rgba(102, 126, 234, 0.05);\r\n  }\r\n  \r\n  .upload-icon {\r\n    font-size: 2rem;\r\n    color: #dee2e6;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  &.has-file {\r\n    border-color: #28a745;\r\n    background: rgba(40, 167, 69, 0.05);\r\n    \r\n    .upload-icon {\r\n      color: #28a745;\r\n    }\r\n  }\r\n  \r\n  p {\r\n    margin: 0;\r\n    color: #6c757d;\r\n    font-size: 0.9rem;\r\n  }\r\n  \r\n  .file-name {\r\n    color: #28a745;\r\n    font-weight: 500;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 100px;\r\n  padding: 12px;\r\n  border: 2px solid #e9ecef;\r\n  border-radius: 8px;\r\n  font-family: inherit;\r\n  font-size: 0.9rem;\r\n  resize: vertical;\r\n  transition: border-color 0.3s ease;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #667eea;\r\n  }\r\n  \r\n  &::placeholder {\r\n    color: #adb5bd;\r\n  }\r\n`;\r\n\r\nconst PromptSection = styled.div`\r\n  border: 2px solid #f8f9fa;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst PromptTypeSelector = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst RadioOption = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  \r\n  input {\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  span {\r\n    font-size: 0.9rem;\r\n    color: #495057;\r\n  }\r\n`;\r\n\r\nconst PromptEditor = styled.div`\r\n  h4 {\r\n    margin: 0 0 10px 0;\r\n    color: #2c3e50;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .icon {\r\n      margin-right: 8px;\r\n      color: #667eea;\r\n    }\r\n  }\r\n`;\r\n\r\nconst PromptTextArea = styled.textarea`\r\n  width: 100%;\r\n  min-height: 120px;\r\n  padding: 15px;\r\n  border: 2px solid #e9ecef;\r\n  border-radius: 8px;\r\n  font-family: 'Courier New', monospace;\r\n  font-size: 0.85rem;\r\n  line-height: 1.5;\r\n  background: #f8f9fa;\r\n  resize: vertical;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #667eea;\r\n    background: white;\r\n  }\r\n`;\r\n\r\nconst CheckboxOption = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  \r\n  input {\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  span {\r\n    font-size: 0.9rem;\r\n    color: #495057;\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  justify-content: center;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 12px 24px;\r\n  border: none;\r\n  border-radius: 8px;\r\n  font-size: 1rem;\r\n  font-weight: 500;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  \r\n  &.primary {\r\n    background: #667eea;\r\n    color: white;\r\n    \r\n    &:hover {\r\n      background: #5a67d8;\r\n      transform: translateY(-2px);\r\n    }\r\n  }\r\n  \r\n  &.secondary {\r\n    background: #e9ecef;\r\n    color: #495057;\r\n    \r\n    &:hover {\r\n      background: #dee2e6;\r\n    }\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.6;\r\n    cursor: not-allowed;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst ResponseSection = styled.div`\r\n  border: 2px solid #f8f9fa;\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  min-height: 200px;\r\n  \r\n  h3 {\r\n    margin: 0 0 15px 0;\r\n    color: #2c3e50;\r\n    font-size: 1.1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .icon {\r\n      margin-right: 8px;\r\n      color: #28a745;\r\n    }\r\n  }\r\n  \r\n  .no-response {\r\n    text-align: center;\r\n    color: #adb5bd;\r\n    font-style: italic;\r\n    padding: 40px 20px;\r\n  }\r\n  \r\n  .response-content {\r\n    background: #f8f9fa;\r\n    border-radius: 8px;\r\n    padding: 20px;\r\n    white-space: pre-wrap;\r\n    font-family: inherit;\r\n    line-height: 1.6;\r\n  }\r\n`;\r\n\r\nconst StatusIndicator = styled.div`\r\n  margin-top: 8px;\r\n  padding: 6px 10px;\r\n  border-radius: 6px;\r\n  font-size: 0.8rem;\r\n  font-weight: 500;\r\n  \r\n  &.success {\r\n    background: rgba(40, 167, 69, 0.1);\r\n    color: #28a745;\r\n    border: 1px solid rgba(40, 167, 69, 0.2);\r\n  }\r\n  \r\n  &.empty {\r\n    background: rgba(108, 117, 125, 0.1);\r\n    color: #6c757d;\r\n    border: 1px solid rgba(108, 117, 125, 0.2);\r\n  }\r\n`;\r\n\r\nconst OptimizationSection = styled.div`\r\n  background: rgba(102, 126, 234, 0.05);\r\n  border: 2px solid rgba(102, 126, 234, 0.1);\r\n  border-radius: 12px;\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n  \r\n  h4 {\r\n    margin: 0 0 15px 0;\r\n    color: #2c3e50;\r\n    font-size: 1rem;\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    .icon {\r\n      margin-right: 8px;\r\n      color: #667eea;\r\n    }\r\n  }\r\n`;\r\n\r\nconst OptimizationControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 15px;\r\n  margin-bottom: 15px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nconst OptimizationButton = styled.button`\r\n  padding: 8px 16px;\r\n  border: 1px solid #667eea;\r\n  border-radius: 6px;\r\n  background: ${props => props.loading ? '#f8f9fa' : '#667eea'};\r\n  color: ${props => props.loading ? '#6c757d' : 'white'};\r\n  font-size: 0.9rem;\r\n  font-weight: 500;\r\n  cursor: ${props => props.loading ? 'not-allowed' : 'pointer'};\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 6px;\r\n  \r\n  &:hover:not(:disabled) {\r\n    background: #5a67d8;\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n\r\nconst OptimizationSelect = styled.select`\r\n  padding: 6px 12px;\r\n  border: 1px solid #e9ecef;\r\n  border-radius: 6px;\r\n  font-size: 0.9rem;\r\n  background: white;\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #667eea;\r\n  }\r\n`;\r\n\r\nconst OptimizationStatus = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  margin-top: 10px;\r\n  padding: 8px 12px;\r\n  background: ${props => props.optimized ? 'rgba(40, 167, 69, 0.1)' : 'rgba(108, 117, 125, 0.1)'};\r\n  border-radius: 6px;\r\n  font-size: 0.8rem;\r\n  \r\n  .status-text {\r\n    color: ${props => props.optimized ? '#28a745' : '#6c757d'};\r\n    font-weight: 500;\r\n  }\r\n  \r\n  .version {\r\n    color: #667eea;\r\n    font-weight: 600;\r\n  }\r\n`;\r\n\r\nconst MainInterface = ({ setIsLoading }) => {\r\n  const [tactileFile, setTactileFile] = useState(null);\r\n  const [visualFile, setVisualFile] = useState(null);\r\n  const [textualInput, setTextualInput] = useState('');\r\n  const [promptType, setPromptType] = useState('Vision-Text');\r\n  const [promptText, setPromptText] = useState('');\r\n  const [addContextualInfo, setAddContextualInfo] = useState(false);\r\n  const [response, setResponse] = useState(null);\r\n  \r\n  // Prompt optimization states\r\n  const [autoOptimize, setAutoOptimize] = useState(true);\r\n  const [optimizationStrategy, setOptimizationStrategy] = useState('Balanced Optimization');\r\n  const [isOptimizing, setIsOptimizing] = useState(false);\r\n  const [optimizationVersion, setOptimizationVersion] = useState('v2');\r\n  const [promptHistory, setPromptHistory] = useState([]);\r\n  const [isOptimized, setIsOptimized] = useState(false);\r\n\r\n  // Generate prompt based on inputs\r\n  const generateBasePrompt = () => {\r\n    let sections = [];\r\n    \r\n    // Add content based on what's available\r\n    if (tactileFile) {\r\n      sections.push(`Tactile Data File: ${tactileFile.name}`);\r\n    }\r\n    \r\n    if (visualFile) {\r\n      sections.push(`Visual Data File: ${visualFile.name}`);\r\n    }\r\n    \r\n    if (textualInput.trim()) {\r\n      sections.push(`Text Input: ${textualInput}`);\r\n    }\r\n    \r\n    if (addContextualInfo) {\r\n      sections.push('Additional Context: Please provide detailed analysis considering all available modalities and their interactions.');\r\n    }\r\n    \r\n    return sections.length > 0 ? sections.join('\\n\\n') : 'No input provided yet.';\r\n  };\r\n  \r\n  // Generate optimized prompt based on type and inputs\r\n  const generateOptimizedPrompt = () => {\r\n    if (promptType === 'Vision-Text') {\r\n      return `Perform a detailed comprehensive multimodal analysis with cross-referencing of the following visual and textual information:\r\n\r\n**Textual Input Analysis:**\r\nImage Description:\r\nText Input:\r\n\r\nProvide actionable insights with confidence levels utilizing the provided the visual and textual context.\r\n\r\n[Context]`;\r\n    }\r\n    \r\n    // Add other prompt types as needed\r\n    return generateBasePrompt();\r\n  };\r\n  \r\n  // Optimize prompt using AI techniques\r\n  const optimizePrompt = async (basePrompt) => {\r\n    setIsOptimizing(true);\r\n    \r\n    // Simulate AI optimization process\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    \r\n    const optimizedPrompt = generateOptimizedPrompt();\r\n    \r\n    // Add to history\r\n    setPromptHistory(prev => [...prev, { version: optimizationVersion, prompt: basePrompt, timestamp: new Date() }]);\r\n    \r\n    setIsOptimizing(false);\r\n    setIsOptimized(true);\r\n    \r\n    return optimizedPrompt;\r\n  };\r\n\r\n  // Listen for input changes and auto-update prompt\r\n  React.useEffect(() => {\r\n    const updatePrompt = async () => {\r\n      const basePrompt = generateBasePrompt();\r\n      \r\n      if (autoOptimize && (tactileFile || visualFile || textualInput.trim())) {\r\n        const optimized = await optimizePrompt(basePrompt);\r\n        setPromptText(optimized);\r\n      } else {\r\n        setPromptText(basePrompt);\r\n        setIsOptimized(false);\r\n      }\r\n    };\r\n    \r\n    updatePrompt();\r\n  }, [tactileFile, visualFile, textualInput, addContextualInfo, autoOptimize]);\r\n  \r\n  // Manual optimization handler\r\n  const handleManualOptimization = async () => {\r\n    const basePrompt = generateBasePrompt();\r\n    const optimized = await optimizePrompt(basePrompt);\r\n    setPromptText(optimized);\r\n  };\r\n  \r\n  // Revert to previous version\r\n  const handleRevert = () => {\r\n    if (promptHistory.length > 0) {\r\n      const lastVersion = promptHistory[promptHistory.length - 1];\r\n      setPromptText(lastVersion.prompt);\r\n      setPromptHistory(prev => prev.slice(0, -1));\r\n      setIsOptimized(false);\r\n    }\r\n  };\r\n  \r\n  // Insert example prompt\r\n  const handleInsertExample = () => {\r\n    const examplePrompt = `Perform a detailed comprehensive multimodal analysis with cross-referencing of the following visual and textual information:\r\n\r\n**Textual Input Analysis:**\r\nImage Description: [Your image description here]\r\nText Input: [Your text input here]\r\n\r\nProvide actionable insights with confidence levels utilizing the provided the visual and textual context.\r\n\r\n[Context]`;\r\n    setPromptText(examplePrompt);\r\n    setIsOptimized(false);\r\n  };\r\n\r\n  const handleFileUpload = (file, type) => {\r\n    if (type === 'tactile') {\r\n      setTactileFile(file);\r\n    } else if (type === 'visual') {\r\n      setVisualFile(file);\r\n    }\r\n  };\r\n\r\n  const handleDrop = (e, type) => {\r\n    e.preventDefault();\r\n    const files = e.dataTransfer.files;\r\n    if (files.length > 0) {\r\n      handleFileUpload(files[0], type);\r\n    }\r\n  };\r\n\r\n  const handleDragOver = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const clearInputs = () => {\r\n    setTactileFile(null);\r\n    setVisualFile(null);\r\n    setTextualInput('');\r\n    setResponse(null);\r\n  };\r\n\r\n  const generateResponse = async () => {\r\n    try {\r\n      setIsLoading(true);\r\n      \r\n      // Check at least one input is provided\r\n      if (!tactileFile && !visualFile && !textualInput.trim()) {\r\n        toast.error('Please provide at least one input: tactile file, image, or text');\r\n        return;\r\n      }\r\n      \r\n      // Prepare data\r\n      const formData = new FormData();\r\n      \r\n      if (tactileFile) {\r\n        formData.append('tactile_file', tactileFile);\r\n      }\r\n      \r\n      if (visualFile) {\r\n        formData.append('image', visualFile);\r\n      }\r\n      \r\n      if (textualInput.trim()) {\r\n        formData.append('text_context', textualInput);\r\n      }\r\n      \r\n      // Use the optimized prompt or generate a fallback\r\n      let apiPrompt = promptText || 'Please analyze the provided data';\r\n      if (!promptText && promptType === 'Question Answering' && textualInput.trim()) {\r\n        apiPrompt = `Please answer the following question: ${textualInput}`;\r\n      } else if (!promptText && textualInput.trim()) {\r\n        apiPrompt = `Please analyze the provided data. Additional context: ${textualInput}`;\r\n      }\r\n      \r\n      formData.append('prompt', apiPrompt);\r\n      formData.append('prompt_type', promptType);\r\n      formData.append('add_contextual_info', addContextualInfo);\r\n      \r\n      console.log('Sending request to API...', {\r\n        prompt: apiPrompt,\r\n        promptType: promptType,\r\n        hasImage: !!visualFile,\r\n        hasTactileFile: !!tactileFile,\r\n        hasTextContext: !!textualInput.trim()\r\n      });\r\n      \r\n      // Call unified multimodal analysis API\r\n      const result = await multimodalAPI.processUnifiedAnalysis(formData);\r\n      \r\n      console.log('API response:', result);\r\n      \r\n      if (result.success) {\r\n        setResponse(result.response);\r\n        toast.success('Analysis completed!');\r\n      } else {\r\n        toast.error(`Analysis failed: ${result.error}`);\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Request error:', error);\r\n      toast.error(`Request failed: ${error.message || error.error || 'Unknown error'}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MainContainer>\r\n      {/* Data Input Section */}\r\n      <Section>\r\n        <h2>\r\n          <FontAwesomeIcon icon={faUpload} className=\"icon\" />\r\n          Data Input Section\r\n        </h2>\r\n        \r\n        <DataInputGrid>\r\n          {/* Tactile Data Input */}\r\n          <InputCard>\r\n            <h3>\r\n              <FontAwesomeIcon icon={faHandPaper} className=\"icon\" />\r\n              Tactile Data Input\r\n            </h3>\r\n            <FileUploadArea\r\n              className={tactileFile ? 'has-file' : ''}\r\n              onDrop={(e) => handleDrop(e, 'tactile')}\r\n              onDragOver={handleDragOver}\r\n              onClick={() => document.getElementById('tactile-input').click()}\r\n            >\r\n              <FontAwesomeIcon icon={faUpload} className=\"upload-icon\" />\r\n              {tactileFile ? (\r\n                <>\r\n                  <p>Tactile file uploaded</p>\r\n                  <p className=\"file-name\">{tactileFile.name}</p>\r\n                </>\r\n              ) : (\r\n                <p>Upload Tactile File</p>\r\n              )}\r\n              <input\r\n                id=\"tactile-input\"\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                accept=\".csv,.json,.txt\"\r\n                onChange={(e) => handleFileUpload(e.target.files[0], 'tactile')}\r\n              />\r\n            </FileUploadArea>\r\n            <StatusIndicator className={tactileFile ? 'success' : 'empty'}>\r\n              {tactileFile ? `File uploaded: ${tactileFile.name}` : 'No file uploaded'}\r\n            </StatusIndicator>\r\n          </InputCard>\r\n\r\n          {/* Visual Data Input */}\r\n          <InputCard>\r\n            <h3>\r\n              <FontAwesomeIcon icon={faImage} className=\"icon\" />\r\n              Visual Data Input\r\n            </h3>\r\n            <FileUploadArea\r\n              className={visualFile ? 'has-file' : ''}\r\n              onDrop={(e) => handleDrop(e, 'visual')}\r\n              onDragOver={handleDragOver}\r\n              onClick={() => document.getElementById('visual-input').click()}\r\n            >\r\n              <FontAwesomeIcon icon={faUpload} className=\"upload-icon\" />\r\n              {visualFile ? (\r\n                <>\r\n                  <p>Image uploaded</p>\r\n                  <p className=\"file-name\">{visualFile.name}</p>\r\n                </>\r\n              ) : (\r\n                <p>No image uploaded</p>\r\n              )}\r\n              <input\r\n                id=\"visual-input\"\r\n                type=\"file\"\r\n                style={{ display: 'none' }}\r\n                accept=\"image/*\"\r\n                onChange={(e) => handleFileUpload(e.target.files[0], 'visual')}\r\n              />\r\n            </FileUploadArea>\r\n            <StatusIndicator className={visualFile ? 'success' : 'empty'}>\r\n              {visualFile ? `Image uploaded: ${visualFile.name}` : 'No image uploaded'}\r\n            </StatusIndicator>\r\n            <TextArea\r\n              placeholder=\"Manual image description (optional)\"\r\n              style={{ marginTop: '10px', minHeight: '60px' }}\r\n            />\r\n          </InputCard>\r\n\r\n          {/* Textual Input */}\r\n          <InputCard>\r\n            <h3>\r\n              <FontAwesomeIcon icon={faFileText} className=\"icon\" />\r\n              Textual Input\r\n            </h3>\r\n            <TextArea\r\n              placeholder=\"Enter additional text, questions, or queries here...\"\r\n              value={textualInput}\r\n              onChange={(e) => setTextualInput(e.target.value)}\r\n            />\r\n            <StatusIndicator className={textualInput.trim() ? 'success' : 'empty'}>\r\n              {textualInput.trim() ? `${textualInput.length} characters entered` : 'No text entered'}\r\n            </StatusIndicator>\r\n          </InputCard>\r\n        </DataInputGrid>\r\n      </Section>\r\n\r\n      {/* Prompt Engineering & Controls */}\r\n      <Section>\r\n        <h2>\r\n          <FontAwesomeIcon icon={faPlay} className=\"icon\" />\r\n          Prompt Engineering & Controls\r\n        </h2>\r\n        \r\n                <PromptSection>\r\n          <div style={{ marginBottom: '20px' }}>\r\n            <h4 style={{ margin: '0 0 10px 0', color: '#2c3e50' }}>Prompt Type Selection</h4>\r\n            <PromptTypeSelector>\r\n              <RadioOption>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"promptType\"\r\n                  value=\"Tactile-Text\"\r\n                  checked={promptType === 'Tactile-Text'}\r\n                  onChange={(e) => setPromptType(e.target.value)}\r\n                />\r\n                <span>Tactile-Text</span>\r\n              </RadioOption>\r\n              <RadioOption>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"promptType\"\r\n                  value=\"Vision-Text\"\r\n                  checked={promptType === 'Vision-Text'}\r\n                  onChange={(e) => setPromptType(e.target.value)}\r\n                />\r\n                <span>Vision-Text</span>\r\n              </RadioOption>\r\n              <RadioOption>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"promptType\"\r\n                  value=\"Tactile-Vision-Text Combined\"\r\n                  checked={promptType === 'Tactile-Vision-Text Combined'}\r\n                  onChange={(e) => setPromptType(e.target.value)}\r\n                />\r\n                <span>Tactile-Vision-Text Combined</span>\r\n              </RadioOption>\r\n              <RadioOption>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"promptType\"\r\n                  value=\"Question Answering\"\r\n                  checked={promptType === 'Question Answering'}\r\n                  onChange={(e) => setPromptType(e.target.value)}\r\n                />\r\n                <span>Question Answering</span>\r\n              </RadioOption>\r\n            </PromptTypeSelector>\r\n          </div>\r\n\r\n          <OptimizationSection>\r\n            <h4>\r\n              <FontAwesomeIcon icon={faCog} className=\"icon\" />\r\n              Automatic Prompt Optimization\r\n            </h4>\r\n            \r\n            <OptimizationControls>\r\n              <CheckboxOption>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={autoOptimize}\r\n                  onChange={(e) => setAutoOptimize(e.target.checked)}\r\n                />\r\n                <span>Auto-optimize</span>\r\n              </CheckboxOption>\r\n              \r\n              <OptimizationSelect \r\n                value={optimizationStrategy} \r\n                onChange={(e) => setOptimizationStrategy(e.target.value)}\r\n              >\r\n                <option value=\"Balanced Optimization\">Balanced Optimization</option>\r\n                <option value=\"Clarity Focus\">Clarity Focus</option>\r\n                <option value=\"Structure Focus\">Structure Focus</option>\r\n                <option value=\"Specificity Focus\">Specificity Focus</option>\r\n              </OptimizationSelect>\r\n              \r\n              <OptimizationButton \r\n                onClick={handleManualOptimization}\r\n                loading={isOptimizing}\r\n                disabled={isOptimizing}\r\n              >\r\n                {isOptimizing ? (\r\n                  <FontAwesomeIcon icon={faSpinner} spin />\r\n                ) : (\r\n                  <FontAwesomeIcon icon={faMagic} />\r\n                )}\r\n                Optimize Prompt\r\n              </OptimizationButton>\r\n              \r\n              {promptHistory.length > 0 && (\r\n                <OptimizationButton \r\n                  onClick={handleRevert}\r\n                  style={{ background: '#6c757d', borderColor: '#6c757d' }}\r\n                >\r\n                  <FontAwesomeIcon icon={faHistory} />\r\n                  Revert\r\n                </OptimizationButton>\r\n              )}\r\n              \r\n              <span style={{ color: '#6c757d', fontSize: '0.8rem' }}>\r\n                Optimization {optimizationVersion}\r\n              </span>\r\n            </OptimizationControls>\r\n            \r\n            <OptimizationStatus optimized={isOptimized}>\r\n              <FontAwesomeIcon \r\n                icon={isOptimized ? faCheckCircle : faCog} \r\n                style={{ color: isOptimized ? '#28a745' : '#6c757d' }}\r\n              />\r\n              <span className=\"status-text\">\r\n                {isOptimizing ? 'Optimizing...' : \r\n                 isOptimized ? 'This prompt has been optimized using AI prompt engineering techniques' : \r\n                 'Ready to process multimodal data'}\r\n              </span>\r\n              {isOptimized && <span className=\"version\">Auto-optimized</span>}\r\n            </OptimizationStatus>\r\n          </OptimizationSection>\r\n\r\n          <PromptEditor>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>\r\n              <h4>\r\n                <FontAwesomeIcon icon={faFileText} className=\"icon\" />\r\n                Prompt Preview/Editor\r\n              </h4>\r\n              <OptimizationButton \r\n                onClick={handleInsertExample}\r\n                style={{ \r\n                  background: '#ffc107', \r\n                  borderColor: '#ffc107', \r\n                  color: '#212529',\r\n                  fontSize: '0.8rem',\r\n                  padding: '6px 12px'\r\n                }}\r\n              >\r\n                Insert Example\r\n              </OptimizationButton>\r\n            </div>\r\n            <PromptTextArea\r\n              value={promptText}\r\n              onChange={(e) => setPromptText(e.target.value)}\r\n              placeholder=\"Prompt content will appear here...\"\r\n              style={{\r\n                background: '#f8f9fa'\r\n              }}\r\n            />\r\n            <CheckboxOption>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={addContextualInfo}\r\n                onChange={(e) => setAddContextualInfo(e.target.checked)}\r\n              />\r\n              <span>Add Contextual Information</span>\r\n            </CheckboxOption>\r\n          </PromptEditor>\r\n        </PromptSection>\r\n\r\n        <ButtonGroup>\r\n          <Button className=\"primary\" onClick={generateResponse}>\r\n            <FontAwesomeIcon icon={faPlay} />\r\n            Generate Response\r\n          </Button>\r\n          <Button className=\"secondary\" onClick={clearInputs}>\r\n            <FontAwesomeIcon icon={faTrash} />\r\n            Clear Inputs\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Section>\r\n\r\n      {/* AI Response Output */}\r\n      <Section>\r\n        <ResponseSection>\r\n          <h3>\r\n            <FontAwesomeIcon icon={faPlay} className=\"icon\" />\r\n            AI Response Output\r\n          </h3>\r\n          {response ? (\r\n            <div className=\"response-content\">\r\n              {response}\r\n            </div>\r\n          ) : (\r\n            <div className=\"no-response\">\r\n              <p>No response generated yet</p>\r\n              <p>Configure your inputs and click \"Generate Response\" to see AI analysis</p>\r\n            </div>\r\n          )}\r\n        </ResponseSection>\r\n      </Section>\r\n    </MainContainer>\r\n  );\r\n};\r\n\r\nexport default MainInterface; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SACEC,QAAQ,EACRC,OAAO,EACPC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,OAAO,EACPC,KAAK,EACLC,OAAO,EACPC,SAAS,EACTC,SAAS,EACTC,aAAa,QACR,mCAAmC;AAE1C,SAASC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,aAAa,GAAGnB,MAAM,CAACoB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GALIF,aAAa;AAOnB,MAAMG,OAAO,GAAGtB,MAAM,CAACoB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GAfID,OAAO;AAiBb,MAAME,aAAa,GAAGxB,MAAM,CAACoB,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GATID,aAAa;AAWnB,MAAME,SAAS,GAAG1B,MAAM,CAACoB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,GAAA,GAvBID,SAAS;AAyBf,MAAME,cAAc,GAAG5B,MAAM,CAACoB,GAAG;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACS,GAAA,GA5CID,cAAc;AA8CpB,MAAME,QAAQ,GAAG9B,MAAM,CAAC+B,QAAQ;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAnBIF,QAAQ;AAqBd,MAAMG,aAAa,GAAGjC,MAAM,CAACoB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC;AAACc,GAAA,GALID,aAAa;AAOnB,MAAME,kBAAkB,GAAGnC,MAAM,CAACoB,GAAG;AACrC;AACA;AACA;AACA;AACA,CAAC;AAACgB,GAAA,GALID,kBAAkB;AAOxB,MAAME,WAAW,GAAGrC,MAAM,CAACsC,KAAK;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAbIF,WAAW;AAejB,MAAMG,YAAY,GAAGxC,MAAM,CAACoB,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACqB,GAAA,GAbID,YAAY;AAelB,MAAME,cAAc,GAAG1C,MAAM,CAAC+B,QAAQ;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAjBID,cAAc;AAmBpB,MAAME,cAAc,GAAG5C,MAAM,CAACsC,KAAK;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACO,IAAA,GAdID,cAAc;AAgBpB,MAAME,WAAW,GAAG9C,MAAM,CAACoB,GAAG;AAC9B;AACA;AACA;AACA;AACA,CAAC;AAAC2B,IAAA,GALID,WAAW;AAOjB,MAAME,MAAM,GAAGhD,MAAM,CAACiD,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GApCIF,MAAM;AAsCZ,MAAMG,eAAe,GAAGnD,MAAM,CAACoB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GAlCID,eAAe;AAoCrB,MAAME,eAAe,GAAGrD,MAAM,CAACoB,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACkC,IAAA,GAlBID,eAAe;AAoBrB,MAAME,mBAAmB,GAAGvD,MAAM,CAACoB,GAAG;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACoC,IAAA,GAnBID,mBAAmB;AAqBzB,MAAME,oBAAoB,GAAGzD,MAAM,CAACoB,GAAG;AACvC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACsC,IAAA,GANID,oBAAoB;AAQ1B,MAAME,kBAAkB,GAAG3D,MAAM,CAACiD,MAAM;AACxC;AACA;AACA;AACA,gBAAgBW,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,SAAS;AAC9D,WAAWD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,OAAO;AACvD;AACA;AACA,YAAYD,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,aAAa,GAAG,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAtBIH,kBAAkB;AAwBxB,MAAMI,kBAAkB,GAAG/D,MAAM,CAACgE,MAAM;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAXIF,kBAAkB;AAaxB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}