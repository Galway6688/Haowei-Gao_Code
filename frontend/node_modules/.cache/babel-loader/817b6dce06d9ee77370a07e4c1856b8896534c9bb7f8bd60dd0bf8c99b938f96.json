{"ast":null,"code":"var _jsxFileName = \"E:\\\\python project\\\\Real new\\\\frontend\\\\src\\\\components\\\\FewShotLearning.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGraduationCap, faList, faPlay, faPlus, faStar, faMagic } from '@fortawesome/free-solid-svg-icons';\nimport { multimodalAPI } from '../services/api';\nimport InputField from './common/InputField';\nimport FileUpload from './common/FileUpload';\nimport Button from './common/Button';\nimport ResultsDisplay from './common/ResultsDisplay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div``;\n_c = Container;\nconst SectionHeader = styled.div`\n  text-align: center;\n  margin-bottom: 30px;\n  \n  h2 {\n    font-size: 2rem;\n    color: #2c3e50;\n    margin-bottom: 10px;\n    \n    .icon {\n      color: #9b59b6;\n      margin-right: 10px;\n    }\n  }\n  \n  p {\n    color: #7f8c8d;\n    font-size: 1.1rem;\n  }\n`;\n_c2 = SectionHeader;\nconst Section = styled.div`\n  margin-bottom: 30px;\n  padding: 25px;\n  background: #f8f9fa;\n  border-radius: 10px;\n  \n  h3 {\n    color: #2c3e50;\n    margin-bottom: 20px;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n    \n    .icon {\n      color: #9b59b6;\n    }\n  }\n`;\n_c3 = Section;\nconst ExampleItem = styled.div`\n  background: white;\n  padding: 20px;\n  border-radius: 8px;\n  margin-bottom: 20px;\n  border: 1px solid #e0e0e0;\n  \n  h4 {\n    color: #9b59b6;\n    margin-bottom: 15px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n`;\n_c4 = ExampleItem;\nconst RemoveButton = styled.button`\n  background: #e74c3c;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 0.8rem;\n  \n  &:hover {\n    background: #c0392b;\n  }\n`;\n_c5 = RemoveButton;\nconst InputGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 20px;\n  margin-bottom: 20px;\n`;\n_c6 = InputGrid;\nconst FewShotLearning = ({\n  setIsLoading\n}) => {\n  _s();\n  const [examples, setExamples] = useState([{\n    id: 1,\n    tactile: '',\n    text: '',\n    output: ''\n  }]);\n  const [newInput, setNewInput] = useState({\n    tactile: '',\n    text: '',\n    imageFile: null\n  });\n  const [results, setResults] = useState(null);\n  const addExample = () => {\n    const newId = Math.max(...examples.map(e => e.id)) + 1;\n    setExamples(prev => [...prev, {\n      id: newId,\n      tactile: '',\n      text: '',\n      output: ''\n    }]);\n  };\n  const removeExample = id => {\n    if (examples.length > 1) {\n      setExamples(prev => prev.filter(e => e.id !== id));\n    }\n  };\n  const updateExample = (id, field, value) => {\n    setExamples(prev => prev.map(example => example.id === id ? {\n      ...example,\n      [field]: value\n    } : example));\n  };\n  const handleNewInputChange = (field, value) => {\n    setNewInput(prev => ({\n      ...prev,\n      [field]: value\n    }));\n  };\n  const handleFileChange = file => {\n    setNewInput(prev => ({\n      ...prev,\n      imageFile: file\n    }));\n  };\n  const validateForm = () => {\n    // Check if at least one example has some content\n    const hasValidExample = examples.some(example => example.tactile || example.text || example.output);\n    if (!hasValidExample) {\n      toast.error('Please provide at least one example with some content');\n      return false;\n    }\n    if (!newInput.tactile || !newInput.text) {\n      toast.error('Please fill in the new input fields');\n      return false;\n    }\n    return true;\n  };\n  const handleAnalyze = async () => {\n    if (!validateForm()) return;\n    setIsLoading(true);\n    try {\n      const formData = new FormData();\n\n      // Filter and format examples\n      const validExamples = examples.filter(example => example.tactile || example.text || example.output).map(example => ({\n        tactile: example.tactile,\n        text: example.text,\n        output: example.output\n      }));\n      formData.append('examples_json', JSON.stringify(validExamples));\n      formData.append('tactile_data', newInput.tactile);\n      formData.append('text_description', newInput.text);\n      if (newInput.imageFile) {\n        formData.append('image', newInput.imageFile);\n      }\n      const result = await multimodalAPI.fewShotLearning(formData);\n      if (result.success) {\n        setResults(result);\n        toast.success('Few-shot learning completed successfully!');\n      } else {\n        toast.error(`Few-shot learning failed: ${result.error || 'Unknown error'}`);\n      }\n    } catch (error) {\n      console.error('Few-shot learning error:', error);\n      toast.error(`Error processing request: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const loadDemoExamples = () => {\n    const demoExamples = [{\n      id: 1,\n      tactile: 'Smooth, metallic surface with low friction',\n      text: 'Industrial steel plate',\n      output: 'A smooth steel object likely used in construction or manufacturing. The metallic properties suggest it\\'s used for structural applications.'\n    }, {\n      id: 2,\n      tactile: 'Rough, grainy texture with high friction',\n      text: 'Abrasive material for surface finishing',\n      output: 'This is sandpaper or similar abrasive material. The high friction tactile data aligns with its use for smoothing surfaces.'\n    }, {\n      id: 3,\n      tactile: 'Soft, flexible material with medium grip',\n      text: 'Protective covering material',\n      output: 'This appears to be rubber or silicone material used for protection or grip enhancement in various applications.'\n    }];\n    setExamples(demoExamples);\n    toast.info('Demo examples loaded!');\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faGraduationCap,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), \"Few-Shot Learning\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Learn from examples to analyze new data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faList,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), \"Training Examples\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: loadDemoExamples,\n          variant: \"secondary\",\n          size: \"small\",\n          children: \"Load Demo Examples\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), examples.map(example => /*#__PURE__*/_jsxDEV(ExampleItem, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Example \", example.id, examples.length > 1 && /*#__PURE__*/_jsxDEV(RemoveButton, {\n            onClick: () => removeExample(example.id),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(InputGrid, {\n          children: [/*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Tactile Data\",\n            value: example.tactile,\n            onChange: value => updateExample(example.id, 'tactile', value),\n            placeholder: \"Example tactile data...\",\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Text Context\",\n            value: example.text,\n            onChange: value => updateExample(example.id, 'text', value),\n            placeholder: \"Example text...\",\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(InputField, {\n            label: \"Expected Output\",\n            value: example.output,\n            onChange: value => updateExample(example.id, 'output', value),\n            placeholder: \"Expected analysis result...\",\n            multiline: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, example.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addExample,\n        icon: faPlus,\n        variant: \"secondary\",\n        children: \"Add Example\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPlay,\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), \"New Input to Analyze\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGrid, {\n        children: [/*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Tactile Data\",\n          value: newInput.tactile,\n          onChange: value => handleNewInputChange('tactile', value),\n          placeholder: \"New tactile data to analyze...\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputField, {\n          label: \"Text Description\",\n          value: newInput.text,\n          onChange: value => handleNewInputChange('text', value),\n          placeholder: \"New text description...\",\n          multiline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n          label: \"Image (Optional)\",\n          onFileChange: handleFileChange,\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleAnalyze,\n        icon: faMagic,\n        variant: \"primary\",\n        children: \"Analyze with Few-Shot Learning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), results && /*#__PURE__*/_jsxDEV(ResultsDisplay, {\n      title: \"Few-Shot Analysis Results\",\n      icon: faStar,\n      results: results\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(FewShotLearning, \"/wo675cSgMFLUhJCp5U0Jc2Xseo=\");\n_c7 = FewShotLearning;\nexport default FewShotLearning;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SectionHeader\");\n$RefreshReg$(_c3, \"Section\");\n$RefreshReg$(_c4, \"ExampleItem\");\n$RefreshReg$(_c5, \"RemoveButton\");\n$RefreshReg$(_c6, \"InputGrid\");\n$RefreshReg$(_c7, \"FewShotLearning\");","map":{"version":3,"names":["React","useState","styled","toast","FontAwesomeIcon","faGraduationCap","faList","faPlay","faPlus","faStar","faMagic","multimodalAPI","InputField","FileUpload","Button","ResultsDisplay","jsxDEV","_jsxDEV","Container","div","_c","SectionHeader","_c2","Section","_c3","ExampleItem","_c4","RemoveButton","button","_c5","InputGrid","_c6","FewShotLearning","setIsLoading","_s","examples","setExamples","id","tactile","text","output","newInput","setNewInput","imageFile","results","setResults","addExample","newId","Math","max","map","e","prev","removeExample","length","filter","updateExample","field","value","example","handleNewInputChange","handleFileChange","file","validateForm","hasValidExample","some","error","handleAnalyze","formData","FormData","validExamples","append","JSON","stringify","result","fewShotLearning","success","console","message","loadDemoExamples","demoExamples","info","children","icon","className","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","onClick","variant","size","label","onChange","placeholder","multiline","onFileChange","accept","title","_c7","$RefreshReg$"],"sources":["E:/python project/Real new/frontend/src/components/FewShotLearning.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { \r\n  faGraduationCap, \r\n  faList, \r\n  faPlay, \r\n  faPlus,\r\n  faStar,\r\n  faMagic \r\n} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { multimodalAPI } from '../services/api';\r\nimport InputField from './common/InputField';\r\nimport FileUpload from './common/FileUpload';\r\nimport Button from './common/Button';\r\nimport ResultsDisplay from './common/ResultsDisplay';\r\n\r\nconst Container = styled.div``;\r\n\r\nconst SectionHeader = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 30px;\r\n  \r\n  h2 {\r\n    font-size: 2rem;\r\n    color: #2c3e50;\r\n    margin-bottom: 10px;\r\n    \r\n    .icon {\r\n      color: #9b59b6;\r\n      margin-right: 10px;\r\n    }\r\n  }\r\n  \r\n  p {\r\n    color: #7f8c8d;\r\n    font-size: 1.1rem;\r\n  }\r\n`;\r\n\r\nconst Section = styled.div`\r\n  margin-bottom: 30px;\r\n  padding: 25px;\r\n  background: #f8f9fa;\r\n  border-radius: 10px;\r\n  \r\n  h3 {\r\n    color: #2c3e50;\r\n    margin-bottom: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 10px;\r\n    \r\n    .icon {\r\n      color: #9b59b6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst ExampleItem = styled.div`\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #e0e0e0;\r\n  \r\n  h4 {\r\n    color: #9b59b6;\r\n    margin-bottom: 15px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nconst RemoveButton = styled.button`\r\n  background: #e74c3c;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 0.8rem;\r\n  \r\n  &:hover {\r\n    background: #c0392b;\r\n  }\r\n`;\r\n\r\nconst InputGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n  gap: 20px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst FewShotLearning = ({ setIsLoading }) => {\r\n  const [examples, setExamples] = useState([\r\n    { id: 1, tactile: '', text: '', output: '' }\r\n  ]);\r\n  const [newInput, setNewInput] = useState({\r\n    tactile: '',\r\n    text: '',\r\n    imageFile: null\r\n  });\r\n  const [results, setResults] = useState(null);\r\n\r\n  const addExample = () => {\r\n    const newId = Math.max(...examples.map(e => e.id)) + 1;\r\n    setExamples(prev => [...prev, { id: newId, tactile: '', text: '', output: '' }]);\r\n  };\r\n\r\n  const removeExample = (id) => {\r\n    if (examples.length > 1) {\r\n      setExamples(prev => prev.filter(e => e.id !== id));\r\n    }\r\n  };\r\n\r\n  const updateExample = (id, field, value) => {\r\n    setExamples(prev => prev.map(example => \r\n      example.id === id ? { ...example, [field]: value } : example\r\n    ));\r\n  };\r\n\r\n  const handleNewInputChange = (field, value) => {\r\n    setNewInput(prev => ({\r\n      ...prev,\r\n      [field]: value\r\n    }));\r\n  };\r\n\r\n  const handleFileChange = (file) => {\r\n    setNewInput(prev => ({\r\n      ...prev,\r\n      imageFile: file\r\n    }));\r\n  };\r\n\r\n  const validateForm = () => {\r\n    // Check if at least one example has some content\r\n    const hasValidExample = examples.some(example => \r\n      example.tactile || example.text || example.output\r\n    );\r\n\r\n    if (!hasValidExample) {\r\n      toast.error('Please provide at least one example with some content');\r\n      return false;\r\n    }\r\n\r\n    if (!newInput.tactile || !newInput.text) {\r\n      toast.error('Please fill in the new input fields');\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  const handleAnalyze = async () => {\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const formData = new FormData();\r\n      \r\n      // Filter and format examples\r\n      const validExamples = examples.filter(example => \r\n        example.tactile || example.text || example.output\r\n      ).map(example => ({\r\n        tactile: example.tactile,\r\n        text: example.text,\r\n        output: example.output\r\n      }));\r\n\r\n      formData.append('examples_json', JSON.stringify(validExamples));\r\n      formData.append('tactile_data', newInput.tactile);\r\n      formData.append('text_description', newInput.text);\r\n      \r\n      if (newInput.imageFile) {\r\n        formData.append('image', newInput.imageFile);\r\n      }\r\n\r\n      const result = await multimodalAPI.fewShotLearning(formData);\r\n\r\n      if (result.success) {\r\n        setResults(result);\r\n        toast.success('Few-shot learning completed successfully!');\r\n      } else {\r\n        toast.error(`Few-shot learning failed: ${result.error || 'Unknown error'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Few-shot learning error:', error);\r\n      toast.error(`Error processing request: ${error.message}`);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const loadDemoExamples = () => {\r\n    const demoExamples = [\r\n      {\r\n        id: 1,\r\n        tactile: 'Smooth, metallic surface with low friction',\r\n        text: 'Industrial steel plate',\r\n        output: 'A smooth steel object likely used in construction or manufacturing. The metallic properties suggest it\\'s used for structural applications.'\r\n      },\r\n      {\r\n        id: 2,\r\n        tactile: 'Rough, grainy texture with high friction',\r\n        text: 'Abrasive material for surface finishing',\r\n        output: 'This is sandpaper or similar abrasive material. The high friction tactile data aligns with its use for smoothing surfaces.'\r\n      },\r\n      {\r\n        id: 3,\r\n        tactile: 'Soft, flexible material with medium grip',\r\n        text: 'Protective covering material',\r\n        output: 'This appears to be rubber or silicone material used for protection or grip enhancement in various applications.'\r\n      }\r\n    ];\r\n    \r\n    setExamples(demoExamples);\r\n    toast.info('Demo examples loaded!');\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <SectionHeader>\r\n        <h2>\r\n          <FontAwesomeIcon icon={faGraduationCap} className=\"icon\" />\r\n          Few-Shot Learning\r\n        </h2>\r\n        <p>Learn from examples to analyze new data</p>\r\n      </SectionHeader>\r\n\r\n      <Section>\r\n        <h3>\r\n          <FontAwesomeIcon icon={faList} className=\"icon\" />\r\n          Training Examples\r\n        </h3>\r\n        \r\n        <div style={{ marginBottom: '20px' }}>\r\n          <Button onClick={loadDemoExamples} variant=\"secondary\" size=\"small\">\r\n            Load Demo Examples\r\n          </Button>\r\n        </div>\r\n\r\n        {examples.map((example) => (\r\n          <ExampleItem key={example.id}>\r\n            <h4>\r\n              Example {example.id}\r\n              {examples.length > 1 && (\r\n                <RemoveButton onClick={() => removeExample(example.id)}>\r\n                  Remove\r\n                </RemoveButton>\r\n              )}\r\n            </h4>\r\n            <InputGrid>\r\n              <InputField\r\n                label=\"Tactile Data\"\r\n                value={example.tactile}\r\n                onChange={(value) => updateExample(example.id, 'tactile', value)}\r\n                placeholder=\"Example tactile data...\"\r\n                multiline\r\n              />\r\n              <InputField\r\n                label=\"Text Context\"\r\n                value={example.text}\r\n                onChange={(value) => updateExample(example.id, 'text', value)}\r\n                placeholder=\"Example text...\"\r\n                multiline\r\n              />\r\n              <InputField\r\n                label=\"Expected Output\"\r\n                value={example.output}\r\n                onChange={(value) => updateExample(example.id, 'output', value)}\r\n                placeholder=\"Expected analysis result...\"\r\n                multiline\r\n              />\r\n            </InputGrid>\r\n          </ExampleItem>\r\n        ))}\r\n\r\n        <Button onClick={addExample} icon={faPlus} variant=\"secondary\">\r\n          Add Example\r\n        </Button>\r\n      </Section>\r\n\r\n      <Section>\r\n        <h3>\r\n          <FontAwesomeIcon icon={faPlay} className=\"icon\" />\r\n          New Input to Analyze\r\n        </h3>\r\n        <InputGrid>\r\n          <InputField\r\n            label=\"Tactile Data\"\r\n            value={newInput.tactile}\r\n            onChange={(value) => handleNewInputChange('tactile', value)}\r\n            placeholder=\"New tactile data to analyze...\"\r\n            multiline\r\n          />\r\n          <InputField\r\n            label=\"Text Description\"\r\n            value={newInput.text}\r\n            onChange={(value) => handleNewInputChange('text', value)}\r\n            placeholder=\"New text description...\"\r\n            multiline\r\n          />\r\n          <FileUpload\r\n            label=\"Image (Optional)\"\r\n            onFileChange={handleFileChange}\r\n            accept=\"image/*\"\r\n          />\r\n        </InputGrid>\r\n        <Button onClick={handleAnalyze} icon={faMagic} variant=\"primary\">\r\n          Analyze with Few-Shot Learning\r\n        </Button>\r\n      </Section>\r\n\r\n      {results && (\r\n        <ResultsDisplay\r\n          title=\"Few-Shot Analysis Results\"\r\n          icon={faStar}\r\n          results={results}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FewShotLearning; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}